{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/-entity","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"entity\"\n  }, \"@Entity\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"this is a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/jpa\",\n    \"title\": \"jpa\"\n  }, \"[[jpa]]\"), \" annotation which tells the entity will be saved into db\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it also needs @Id annotation too\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"data-access\"\n  }, \"data-access\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"entities that are persisted are called \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"domain\"), \" objects, so I'll now place them under domain package\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"also another way to know if a class is a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"domain\"), \" class or not is that if it needs \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/@Entity\",\n    \"title\": \"@Entity\"\n  }, \"[[@Entity]]\"), \" annotation then it is\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"all stuff related to data access and interfacing over dbs is called a [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/backend-garden/2bd5b5bc96bc34ceafc71c7d08fef0c7/repository.md\",\n    \"title\": \"repository\"\n  }, \"repository\"), \"] in [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/backend-garden/5bd5503eff11e9ddacc09c0d244ff913/spring.md\",\n    \"title\": \"spring\"\n  }, \"spring\"), \"]\")), mdx(\"h2\", {\n    \"id\": \"how-to-load-data-into-the-application\"\n  }, \"how to load data into the application?\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"data loading in [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/backend-garden/5bd5503eff11e9ddacc09c0d244ff913/spring.md\",\n    \"title\": \"spring\"\n  }, \"spring\"), \"] is covered [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/backend-garden/8228f4682b325d202f7206602f8d86ea/data-loading-spring.md\",\n    \"title\": \"data-loading-spring\"\n  }, \"data-loading-spring\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"2b034488-d5f0-57cf-804f-e78f2c4efed4","fields":{"slug":"/data-access","title":"data-access"}}}]},"fields":{"slug":"/-entity","title":"@Entity"}}},"pageContext":{"id":"c724b6d9-78b7-533b-b5b6-589c9bd10f84"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}