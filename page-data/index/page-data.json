{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"welcome-to-my-backend-learning-path\"\n  }, \"welcome to my backend learning path\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"h2\", {\n    parentName: \"li\",\n    \"id\": \"list-of-things-to-be-learned-todo\"\n  }, \"list of things to be learned: [\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"todo\",\n    \"title\": \"todo\"\n  }, \"todo\"), \"]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"h2\", {\n    parentName: \"li\",\n    \"id\": \"books-readreading-books\"\n  }, \"books read/reading [\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"books\",\n    \"title\": \"books\"\n  }, \"books\"), \"]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"h2\", {\n    parentName: \"li\",\n    \"id\": \"case-study-to-be-done\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"case-study\",\n    \"title\": \"case-study\"\n  }, \"case-study\"), \"] to be done\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"h2\", {\n    parentName: \"li\",\n    \"id\": \"doubts\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"doubts\",\n    \"title\": \"doubts\"\n  }, \"doubts\"), \"]\"))), mdx(\"h2\", {\n    \"id\": \"parent-level-links-to-topics\"\n  }, \"parent level links to topics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"spring\",\n    \"title\": \"spring\"\n  }, \"spring\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"java\",\n    \"title\": \"java\"\n  }, \"java\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"go\",\n    \"title\": \"go\"\n  }, \"go\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"dropwizard\",\n    \"title\": \"dropwizard\"\n  }, \"dropwizard\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"guice\",\n    \"title\": \"guice\"\n  }, \"guice\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"todo\"\n  }, \"todo\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"how \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/tomcat\",\n    \"title\": \"tomcat\"\n  }, \"[[tomcat]]\"), \" works internally?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dispatcher servlet what it is and its lifecycle\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"what is @Service annotation in [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/backend-garden/5bd5503eff11e9ddacc09c0d244ff913/spring.md\",\n    \"title\": \"spring\"\n  }, \"spring\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"what's JMX\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"play with [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/backend-garden/9e59a0aa10aec0125b5e25615a2d44e6/actuator.md\",\n    \"title\": \"actuator\"\n  }, \"actuator\"), \"] and get insights into app environment\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"what's [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/backend-garden/db6a5df27a60484acb2dcf26f336ca0a/lombok.md\",\n    \"title\": \"lombok\"\n  }, \"lombok\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"docker setup to run databases with spring apps\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"92ad779c-a196-5f71-ba4c-07f4fc4ddf41","fields":{"slug":"/todo","title":"todo"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"books\"\n  }, \"books\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD83D\\uDC77 \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://learning.oreilly.com/library/view/spring-boot-up/9781492076971/\"\n  }, \"Oreilly's Spring Boot: Up and Running - Mark Heckler\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD83D\\uDC77 \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://learning.oreilly.com/library/view/learning-java-5th/9781492056263/titlepage01.html\"\n  }, \"Learning Java 5th edition\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD83D\\uDE47\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://learning.oreilly.com/library/view/database-internals/9781492040330/\"\n  }, \"Database Internals by Alex Petrov\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD83D\\uDE47\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://learning.oreilly.com/library/view/learning-mysql-2nd/9781492085911/\"\n  }, \"MySql 2nd edition\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD83D\\uDE47\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://learning.oreilly.com/library/view/domain-driven-design-tackling/0321125215/\"\n  }, \"Domain Driven Design\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2705 \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://learning.oreilly.com/library/view/architecting-for-scale/9781492057161/\"\n  }, \"Architecting for Scale, 2nd Edition\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD83D\\uDC77 \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://learning.oreilly.com/library/view/learning-go/9781492077206/\"\n  }, \"Learning Go\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\uD83D\\uDE47\\uD83C\\uDFFB\\u200D\\u2642\\uFE0F \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://books.sonatype.com/mvnref-book/pdf/mvnref-pdf.pdf\"\n  }, \"Maven: The Complete Reference\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"cf1fa72a-bca3-5dd2-b822-8e149a595c0c","fields":{"slug":"/books","title":"books"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"case-study\"\n  }, \"case-study\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"query optimisation for large rows of an ecommerce for different datastores\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"3ca70884-a43d-5b1e-a1cc-0e4c8eaa6cb6","fields":{"slug":"/case-study","title":"case-study"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"doubts\"\n  }, \"doubts\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"is it better to ask client to send complete info or just the bare min and then fetch the latest from the DB and do the operation? I'm thinking latter, ask client to send as less as possible and take a lock or something?\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"what's the difference between a bean and an object?\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"is bean something that's created by [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/backend-garden/5bd5503eff11e9ddacc09c0d244ff913/spring.md\",\n    \"title\": \"spring\"\n  }, \"spring\"), \"] using IoC and stuff?\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"how to see long running transactions in the system? and debug them? put an upperbound to them?\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"how to specify spring datasource host names? and update them at runtime?\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"f306f1da-9d4a-5d4d-8730-4ab80fdecc1e","fields":{"slug":"/doubts","title":"doubts"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"spring\"\n  }, \"spring\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"tenets of Spring boot\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"dependency management\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"auto-configuration\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"simple deployment - I know k8 and docker, heh\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"main annotations\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/@SpringBootApplication\",\n    \"title\": \"@SpringBootApplication\"\n  }, \"[[@SpringBootApplication]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/@Component\",\n    \"title\": \"@Component\"\n  }, \"[[@Component]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/REST\",\n    \"title\": \"REST\"\n  }, \"[[REST]]\"), \" is the way stuff works now\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"#spring bean - is something that's created by Spring and its lifecycle is managed from within the Spring framework - user never specifies it's creation or GC #confirm\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"wow you can create an api by just doing this\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"@RestController\\nclass ProductService {\\n    private List<Product> products = new ArrayList<Product>();\\n    public ProductService() {\\n        products.addAll(List.of(\\n            new Product(\\\"1\\\", \\\"potato\\\"),\\n            new Product(\\\"2\\\", \\\"onions\\\"),\\n            new Product(\\\"3\\\", \\\"chips\\\"),\\n            new Product(\\\"4\\\", \\\"fruits\\\")\\n        ));\\n    }\\n\\n    @GetMapping(value = \\\"/products\\\")\\n    Iterable<Product> getProducts() {\\n        return products;\\n    }\\n}\\n\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you can use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"Optional<type>\"), \" as the return param for an api if the value can be empty\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"@GetMapping(value = \\\"/products/{id}\\\")\\n    Optional<Product> getProductById(@PathVariable String id) {\\n        for(Product p: products) {\\n            if(p.getId() == id) return Optional.of(p);\\n        }\\n\\n        return Optional.empty();\\n    }\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"java == operator tries to equate the references instead of the values - yikes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \".equals()\"), \" method to check on values\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/backend-garden/1fae4860a4c9c59d75f475464e614daa/data-access.md\",\n    \"title\": \"data-access\"\n  }, \"data-access\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/@Autowired\",\n    \"title\": \"@Autowired\"\n  }, \"[[@Autowired]]\"), \" is not needed if there's a single constructor\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"to do run some code at the start of application start you can do by three ways\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"annotate a class with \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/@Component\",\n    \"title\": \"@Component\"\n  }, \"[[@Component]]\"), \" and create a method with @PostConstruct simple\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/CommandLineRunner\",\n    \"title\": \"CommandLineRunner\"\n  }, \"[[CommandLineRunner]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"or use \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/ApplicationRunner\",\n    \"title\": \"ApplicationRunner\"\n  }, \"[[ApplicationRunner]]\"), \"\")))), mdx(\"h1\", {\n    \"id\": \"configuration\"\n  }, \"configuration\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"ways we can environmentify the application\")), mdx(\"h3\", {\n    \"id\": \"applicationproperties\"\n  }, \"application.properties\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"by default is present in the maven flavoured codebase\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"can be used using \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"@Value\"), \" with some expression language to get the value\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"an example showing reading value from \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"application.properties\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"\\n@RestController\\nclass ConfigParamsController {\\n  @Value(\\\"${environment}\\\")\\n  private String environment;\\n\\n  @GetMapping(\\\"/environment\\\")\\n  String getEnvironment() {\\n    return environment;\\n  }\\n}\\n\\n\")), mdx(\"h3\", {\n    \"id\": \"configurationproperties\"\n  }, \"@ConfigurationProperties\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"b0f4e4bc-f90e-5c3e-a698-743635f92e17","fields":{"slug":"/spring","title":"spring"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"java\"\n  }, \"java\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"class\"), \" is the fundamental unit in java\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"classes are located and loaded at runtime as needed`\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use double quotes always\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add members to a \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"List\"))), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"private List<Product> products = new ArrayList<Product>();\\nproducts.addAll(List.of(\\n            new Product(\\\"1\\\", \\\"potato\\\"),\\n            new Product(\\\"2\\\", \\\"onions\\\"),\\n            new Product(\\\"3\\\", \\\"chips\\\"),\\n            new Product(\\\"4\\\", \\\"fruits\\\")\\n        ));\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"addAll function can add and use it with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"List.of\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Instant\",\n    \"title\": \"Instant\"\n  }, \"[[Instant]]\"), \" seems to be a good util provided natively with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"java.time\"), \" package\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"AtomicLong gives a thread safe way to generate unique ids and is present in the \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"java.util.concurrent\"), \" package\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"9ea06644-f202-5ca5-80f5-621fa853a2c8","fields":{"slug":"/java","title":"java"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"go\"\n  }, \"go\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"it's a compiled language\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"go run <filename.go>\"), \" when trying to run the code as a script\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"go build <filename.go>\"), \" when you want to build a binary - so cool\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"no runtime needed for the package to be deployed, isn't it the best?\")), mdx(\"p\", null, \"this makes sure you don't have to install something else for your code to run, the runtime or virtual machine is built in - the code will never be out of sync of the place it's deployed and will always be compatible - imagine using node lower version for es6 features - booom, or java 8 in jvm 6\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"go tools and 3rd party libs are managed differently than JavaScript, there's no central registry. Everything is done via git repositories\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"go install github.com/rakyll/hey@latest\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"what it does behind the scenes is fetch the code, build it and add it to $GOPATH/bin, since it's a binary nothing to install, just use it as a command\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/backend-garden/b89cd178bf2bca0601329e37d840e124/doubts.md\",\n    \"title\": \"doubts\"\n  }, \"doubts\"), \"] how would it work inside the program?\")))), mdx(\"h3\", {\n    \"id\": \"formatting-linting\"\n  }, \"formatting, linting\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"go comes with a formatter by default - \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"go fmt <filename.go>\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"no prettier required :P\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"golint .\"), \" works and finds lint mistakes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"go vet <filename.go>\"), \" finds unused vars etc\")), mdx(\"h3\", {\n    \"id\": \"build\"\n  }, \"build\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/backend-garden/397dbf9ee88d935d839cdb42ba2f2dda/go.md\",\n    \"title\": \"go\"\n  }, \"go\"), \"] uses [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/backend-garden/236aeaca636edcab1e48e0dd96be406a/make.md\",\n    \"title\": \"make\"\n  }, \"make\"), \"] to build the projects\")), mdx(\"h2\", {\n    \"id\": \"types\"\n  }, \"types\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"each variable which is defined but not initialized will have a value \", mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"0\"), \" unlike \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"undefined\"), \" in JavaScript\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"const\"), \" can only be used for literals, we can't say in code that result of an operations of two variables is const\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-golang\"\n  }, \"const x = 10.3\\n// valid as x is a literal\\nconst y = math.Remainder(x, 2)\\n\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"error: math.Remainder(x, 2) (value of type float64) is not constantcompilerInvalidConstInit\")), mdx(\"h3\", {\n    \"id\": \"scope\"\n  }, \"scope\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"go variables are block scope, vars declared outside the function at the package level are available throughout\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"do they shadow? [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/backend-garden/b89cd178bf2bca0601329e37d840e124/doubts.md\",\n    \"title\": \"doubts\"\n  }, \"doubts\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use shorter variable names if the scope is short like a function but if the variable is added in the package scope then give full name as it should be clear what it's doing\")), mdx(\"h3\", {\n    \"id\": \"arrays-in-go\"\n  }, \"arrays in Go\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"they are not that greatly used, whyyy?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"since go is a strongly typed language and the type of the array contains the length of the array too\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"which makes it difficult to work with as we can't write code or functions which can operate on any array or perform operations\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"also length needs to be specified while creating an array; fixed length not variable\")))), mdx(\"h3\", {\n    \"id\": \"slices\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"h3\",\n    \"href\": \"/backend-garden/817984f3f9e100b64f3dceff0148f4ae/slice.md\",\n    \"title\": \"slice\"\n  }, \"slice\"), \"]s\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"they are what arrays are in other languages\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you can grow them decrease them and when creating you don't have to specify the sizes\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-go\"\n  }, \"package main\\n\\nimport (\\n    \\\"fmt\\\"\\n)\\n\\nfunc main() {\\n    var x = []int{2, 3, 5}\\n\\n    x = append(x, 100, 200)\\n    fmt.Println(len(x))\\n}\\n\\n\")), mdx(\"h2\", {\n    \"id\": \"undefined-in-javascript-but-nil-in-go\"\n  }, \"undefined in JavaScript but \", mdx(\"inlineCode\", {\n    parentName: \"h2\"\n  }, \"nil\"), \" in Go\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"nil means there's no value in the slice\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"66ccd2c6-f9ab-5c20-9350-8a79b22f3245","fields":{"slug":"/go","title":"go"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"dropwizard\"\n  }, \"dropwizard\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"application\",\n    \"title\": \"Application\"\n  }, \"application\"), \"] + [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"configuration\",\n    \"title\": \"Configuration\"\n  }, \"configuration\"), \"] = app\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"configuration\",\n    \"title\": \"Configuration\"\n  }, \"Configuration\"), \"] class is present in every dropwizard app and its values come from a yaml file\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/jersey-resources\",\n    \"title\": \"jersey resources\"\n  }, \"[[jersey resources]]\"), \" are the controllers of a dropwizard app\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"they are classes that can be scoped to serve urls\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"they can get GET, POST etc methods inside that\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"doubts\",\n    \"title\": \"doubts\"\n  }, \"doubts\"), \"] what's \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/jersey\",\n    \"title\": \"jersey\"\n  }, \"[[jersey]]\"), \"?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"before they start working you have to register the resource - no automatic scanning of annotations I guess\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"this is done in the [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"application\",\n    \"title\": \"Application\"\n  }, \"application\"), \"] class's \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"run\"), \" method\")))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"@Override\\npublic void run(HelloWorldConfiguration configuration,\\n              Environment environment) {\\n  final SomeResource resource = new SomeResource();\\n  environment.jersey().register(resource);\\n  // do this multiple times :/\\n}\\n\")), mdx(\"h2\", {\n    parentName: \"li\",\n    \"id\": \"validations\"\n  }, \"validations\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"using @Valid annotation - JSR 303 I think, it can automatically return the correct code to client\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you can also use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ConstraintViolations\"), \" to programmatically map through the violations and do something about it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"also it supports both \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"javax.util.validation\"), \" and Hibernate Validators\")), mdx(\"h2\", {\n    parentName: \"li\",\n    \"id\": \"coding-best-practises\"\n  }, \"coding best practises\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if you need to give out clients; it's best to separate the representations i.e. the objects entities in one single package or folder\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"then another for client which uses a web client and connects to the server\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"server contains the actual logic - it contains the jersey resources\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"all of the external connections like DB etc need to come via yaml file which is parsed to the [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"configuration\",\n    \"title\": \"Configuration\"\n  }, \"configuration\"), \"] class object and the app can use it with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"environment\"), \" maybe in the run method\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"3830a056-bc80-5b93-b7d6-fb61c705484e","fields":{"slug":"/dropwizard","title":"dropwizard"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"guice\"\n  }, \"guice\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"ce0fa7fa-0674-5c93-888b-4996ee8ca0b9","fields":{"slug":"/guice","title":"guice"}}}],"inboundReferences":[]},"fields":{"slug":"/index","title":"welcome to my backend learning path"}}},"pageContext":{"id":"dc1779ab-12d6-51b5-8a40-3e1c955cdfa7"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}