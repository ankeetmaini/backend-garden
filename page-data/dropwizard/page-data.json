{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/dropwizard","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"dropwizard\"\n  }, \"dropwizard\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"application\",\n    \"title\": \"Application\"\n  }, \"application\"), \"] + [\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"configuration\",\n    \"title\": \"Configuration\"\n  }, \"configuration\"), \"] = app\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"configuration\",\n    \"title\": \"Configuration\"\n  }, \"Configuration\"), \"] class is present in every dropwizard app and its values come from a yaml file\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/jersey-resources\",\n    \"title\": \"jersey resources\"\n  }, \"[[jersey resources]]\"), \" are the controllers of a dropwizard app\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"they are classes that can be scoped to serve urls\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"they can get GET, POST etc methods inside that\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"doubts\",\n    \"title\": \"doubts\"\n  }, \"doubts\"), \"] what's \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/jersey\",\n    \"title\": \"jersey\"\n  }, \"[[jersey]]\"), \"?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"before they start working you have to register the resource - no automatic scanning of annotations I guess\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"this is done in the [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"application\",\n    \"title\": \"Application\"\n  }, \"application\"), \"] class's \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"run\"), \" method\")))), mdx(\"pre\", {\n    parentName: \"li\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-java\"\n  }, \"@Override\\npublic void run(HelloWorldConfiguration configuration,\\n              Environment environment) {\\n  final SomeResource resource = new SomeResource();\\n  environment.jersey().register(resource);\\n  // do this multiple times :/\\n}\\n\")), mdx(\"h2\", {\n    parentName: \"li\",\n    \"id\": \"validations\"\n  }, \"validations\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"using @Valid annotation - JSR 303 I think, it can automatically return the correct code to client\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you can also use \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"ConstraintViolations\"), \" to programmatically map through the violations and do something about it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"also it supports both \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"javax.util.validation\"), \" and Hibernate Validators\")), mdx(\"h2\", {\n    parentName: \"li\",\n    \"id\": \"coding-best-practises\"\n  }, \"coding best practises\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"if you need to give out clients; it's best to separate the representations i.e. the objects entities in one single package or folder\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"then another for client which uses a web client and connects to the server\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"server contains the actual logic - it contains the jersey resources\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"all of the external connections like DB etc need to come via yaml file which is parsed to the [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"configuration\",\n    \"title\": \"Configuration\"\n  }, \"configuration\"), \"] class object and the app can use it with \", mdx(\"inlineCode\", {\n    parentName: \"li\"\n  }, \"environment\"), \" maybe in the run method\")))));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"application\"\n  }, \"Application\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Application contains\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"main to start up the server process\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"run\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"initialize\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"b7591a3c-ddfb-5058-8a8c-74e08dcb0920","fields":{"slug":"/application","title":"Application"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"configuration\"\n  }, \"Configuration\"), mdx(\"p\", null, \"[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"dropwizard\",\n    \"title\": \"dropwizard\"\n  }, \"dropwizard\"), \"] construct\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you can use annotations to validate the yaml as it's converted to java object\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e.g. \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/NotEmpty\",\n    \"title\": \"NotEmpty\"\n  }, \"[[NotEmpty]]\"), \" from javax.validation etc\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/@JsonProperty\",\n    \"title\": \"@JsonProperty\"\n  }, \"[[@JsonProperty]]\"), \" on the setters and getters so that jackson can automatically serialize and deserialize it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"728d9cf4-2c75-5f90-a489-f98b81b51efa","fields":{"slug":"/configuration","title":"Configuration"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"configuration\"\n  }, \"Configuration\"), mdx(\"p\", null, \"[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"dropwizard\",\n    \"title\": \"dropwizard\"\n  }, \"dropwizard\"), \"] construct\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you can use annotations to validate the yaml as it's converted to java object\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e.g. \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/NotEmpty\",\n    \"title\": \"NotEmpty\"\n  }, \"[[NotEmpty]]\"), \" from javax.validation etc\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/@JsonProperty\",\n    \"title\": \"@JsonProperty\"\n  }, \"[[@JsonProperty]]\"), \" on the setters and getters so that jackson can automatically serialize and deserialize it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"728d9cf4-2c75-5f90-a489-f98b81b51efa","fields":{"slug":"/configuration","title":"Configuration"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"doubts\"\n  }, \"doubts\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"is it better to ask client to send complete info or just the bare min and then fetch the latest from the DB and do the operation? I'm thinking latter, ask client to send as less as possible and take a lock or something?\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"what's the difference between a bean and an object?\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"is bean something that's created by [\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/backend-garden/5bd5503eff11e9ddacc09c0d244ff913/spring.md\",\n    \"title\": \"spring\"\n  }, \"spring\"), \"] using IoC and stuff?\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"how to see long running transactions in the system? and debug them? put an upperbound to them?\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"how to specify spring datasource host names? and update them at runtime?\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"f306f1da-9d4a-5d4d-8730-4ab80fdecc1e","fields":{"slug":"/doubts","title":"doubts"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"welcome-to-my-backend-learning-path\"\n  }, \"welcome to my backend learning path\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"h2\", {\n    parentName: \"li\",\n    \"id\": \"list-of-things-to-be-learned-todo\"\n  }, \"list of things to be learned: [\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"todo\",\n    \"title\": \"todo\"\n  }, \"todo\"), \"]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"h2\", {\n    parentName: \"li\",\n    \"id\": \"books-readreading-books\"\n  }, \"books read/reading [\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"books\",\n    \"title\": \"books\"\n  }, \"books\"), \"]\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"h2\", {\n    parentName: \"li\",\n    \"id\": \"case-study-to-be-done\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"case-study\",\n    \"title\": \"case-study\"\n  }, \"case-study\"), \"] to be done\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"h2\", {\n    parentName: \"li\",\n    \"id\": \"doubts\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"doubts\",\n    \"title\": \"doubts\"\n  }, \"doubts\"), \"]\"))), mdx(\"h2\", {\n    \"id\": \"parent-level-links-to-topics\"\n  }, \"parent level links to topics\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"spring\",\n    \"title\": \"spring\"\n  }, \"spring\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"java\",\n    \"title\": \"java\"\n  }, \"java\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"go\",\n    \"title\": \"go\"\n  }, \"go\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"dropwizard\",\n    \"title\": \"dropwizard\"\n  }, \"dropwizard\"), \"]\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"guice\",\n    \"title\": \"guice\"\n  }, \"guice\"), \"]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"dc1779ab-12d6-51b5-8a40-3e1c955cdfa7","fields":{"slug":"/index","title":"welcome to my backend learning path"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", {\n    \"id\": \"configuration\"\n  }, \"Configuration\"), mdx(\"p\", null, \"[\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"dropwizard\",\n    \"title\": \"dropwizard\"\n  }, \"dropwizard\"), \"] construct\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"you can use annotations to validate the yaml as it's converted to java object\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"e.g. \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/NotEmpty\",\n    \"title\": \"NotEmpty\"\n  }, \"[[NotEmpty]]\"), \" from javax.validation etc\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"use \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/@JsonProperty\",\n    \"title\": \"@JsonProperty\"\n  }, \"[[@JsonProperty]]\"), \" on the setters and getters so that jackson can automatically serialize and deserialize it\"), mdx(\"li\", {\n    parentName: \"ul\"\n  })));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"728d9cf4-2c75-5f90-a489-f98b81b51efa","fields":{"slug":"/configuration","title":"Configuration"}}}]},"fields":{"slug":"/dropwizard","title":"dropwizard"}}},"pageContext":{"id":"3830a056-bc80-5b93-b7d6-fb61c705484e"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}